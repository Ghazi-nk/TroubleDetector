{
  "version": "1.121.0",
  "results": [
    {
      "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
      "path": "k8s/deployment.yaml",
      "start": {
        "line": 15,
        "col": 5,
        "offset": 252
      },
      "end": {
        "line": 15,
        "col": 9,
        "offset": 256
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 5,
              "offset": 4
            },
            "abstract_content": "spec"
          },
          "$SPEC": {
            "start": {
              "line": 15,
              "col": 5,
              "offset": 252
            },
            "end": {
              "line": 15,
              "col": 9,
              "offset": 256
            },
            "abstract_content": "spec"
          }
        },
        "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
        "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
        "metadata": {
          "references": [
            "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
            "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
            "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
          ],
          "category": "security",
          "cwe": [
            "CWE-250: Execution with Unnecessary Privileges"
          ],
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "technology": [
            "kubernetes"
          ],
          "subcategory": [
            "audit"
          ],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Improper Authorization"
          ],
          "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
          "shortlink": "https://sg.run/dgP5",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 10134,
              "rule_id": "ZqUqeK",
              "rule_name": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
              "rv_id": 947064,
              "url": "https://semgrep.dev/playground/r/JdTDP66/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
              "version_id": "JdTDP66"
            },
            "src": "unchanged"
          },
          "dev.semgrep.actions": [
            "monitor"
          ],
          "semgrep.policy": {
            "id": 183266,
            "name": "Rule Board - Audit column",
            "slug": "rule-board-audit"
          },
          "semgrep.url": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
          "semgrep.ruleset": "default",
          "semgrep.ruleset_id": 3471
        },
        "severity": "INFO",
        "fingerprint": "c96c0ea5672ca25898514095a6a3b5528f096a90bdda3daa067ff24ed657ad83d06aa99071714ef67ab39de07833bbedff4cf7900a2dddea979dfd69b9af0c0c_0",
        "lines": "    spec:",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "PRO"
      }
    },
    {
      "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
      "path": "k8s/deployment.yaml",
      "start": {
        "line": 17,
        "col": 11,
        "offset": 286
      },
      "end": {
        "line": 17,
        "col": 15,
        "offset": 290
      },
      "extra": {
        "metavars": {
          "$NAME": {
            "start": {
              "line": 17,
              "col": 11,
              "offset": 286
            },
            "end": {
              "line": 17,
              "col": 15,
              "offset": 290
            },
            "abstract_content": "name"
          },
          "$CONTAINER": {
            "start": {
              "line": 17,
              "col": 17,
              "offset": 292
            },
            "end": {
              "line": 17,
              "col": 32,
              "offset": 307
            },
            "abstract_content": "troubledetector"
          }
        },
        "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
        "fix": "securityContext:\n            allowPrivilegeEscalation: false\n          name",
        "metadata": {
          "cwe": [
            "CWE-732: Incorrect Permission Assignment for Critical Resource"
          ],
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "references": [
            "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
            "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
            "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
          ],
          "category": "security",
          "technology": [
            "kubernetes"
          ],
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Improper Authorization"
          ],
          "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
          "shortlink": "https://sg.run/eleR",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 47276,
              "rule_id": "WAU5J6",
              "rule_name": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
              "rv_id": 947050,
              "url": "https://semgrep.dev/playground/r/e1T9vzn/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
              "version_id": "e1T9vzn"
            },
            "src": "unchanged"
          },
          "dev.semgrep.actions": [
            "monitor"
          ],
          "semgrep.policy": {
            "id": 183266,
            "name": "Rule Board - Audit column",
            "slug": "rule-board-audit"
          },
          "semgrep.url": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
          "semgrep.ruleset": "default",
          "semgrep.ruleset_id": 3471
        },
        "severity": "WARNING",
        "fingerprint": "d16430f5c42a246f90018c2e4e243172ad30b91809014a415a065ec1d6ce6c26b64479238b0976b09cfa7829741f6e0835c9e60cbd030366d39b5e6f2c695869_0",
        "lines": "        - name: troubledetector",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "PRO"
      }
    }
  ],
  "errors": [
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": ".github/workflows/main.yml",
            "start": {
              "line": 34,
              "col": 9,
              "offset": 761
            },
            "end": {
              "line": 34,
              "col": 27,
              "offset": 779
            }
          },
          {
            "path": ".github/workflows/main.yml",
            "start": {
              "line": 35,
              "col": 24,
              "offset": 761
            },
            "end": {
              "line": 35,
              "col": 27,
              "offset": 764
            }
          }
        ]
      ],
      "message": "Syntax error at line .github/workflows/main.yml:34:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ github.workspace` was unexpected",
      "path": ".github/workflows/main.yml",
      "spans": [
        {
          "file": ".github/workflows/main.yml",
          "start": {
            "line": 34,
            "col": 9,
            "offset": 761
          },
          "end": {
            "line": 34,
            "col": 27,
            "offset": 779
          }
        },
        {
          "file": ".github/workflows/main.yml",
          "start": {
            "line": 35,
            "col": 24,
            "offset": 761
          },
          "end": {
            "line": 35,
            "col": 27,
            "offset": 764
          }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": "Syntax error",
      "message": "Syntax error at line app/semgrep-service/reports/report.json:1:\n missing element",
      "path": "app/semgrep-service/reports/report.json"
    }
  ],
  "paths": {
    "scanned": [
      ".github/workflows/main.yml",
      ".gitignore",
      ".idea/.gitignore",
      ".idea/inspectionProfiles/Project_Default.xml",
      ".idea/inspectionProfiles/profiles_settings.xml",
      ".idea/material_theme_project_new.xml",
      ".idea/misc.xml",
      ".idea/modules.xml",
      ".idea/troubledetector.iml",
      ".idea/vcs.xml",
      "Dockerfile",
      "Dockerfile.semgrep",
      "LICENSE",
      "README.md",
      "app/.gitignore",
      "app/__pycache__/openai_client.cpython-312.pyc",
      "app/github_client.py",
      "app/main.py",
      "app/model_humor.txt",
      "app/openai_client.py",
      "app/requirements.txt",
      "app/semgrep-service/main.py",
      "app/semgrep-service/reports/report.json",
      "app/telegram_bot.py",
      "argocd-app.yaml",
      "k8s/deployment.yaml",
      "k8s/service.yaml"
    ]
  },
  "interfile_languages_used": [],
  "skipped_rules": []
}